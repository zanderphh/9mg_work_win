<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:WT="clr-namespace:_9M.Work.WPF_Common.Controls;assembly=9M.Work.WPF_Common" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
    </Style>

    <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}" >
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ffffff"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BaseTitlePanelStyle" TargetType="{x:Type StackPanel}">
        <Setter Property="Background" Value="#009DED"></Setter>
        <Setter Property="Orientation" Value="Horizontal"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Height" Value="20"></Setter>
    </Style>
    <!--关闭按钮样式-->
    <Style x:Key="BaseButtonCloseStyle" TargetType="{x:Type Button}" >
        <Setter Property="Width" Value="20"></Setter>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/btn_close.png" Stretch="None"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ffffff"/>
            </Trigger>
        </Style.Triggers>



    </Style>
    <!--关闭Menu按钮样式-->
    <Style x:Key="BaseButtonCloseMenuStyle" TargetType="{x:Type Button}" >
        <Setter Property="Width" Value="20"></Setter>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="BorderBrush" Value="Gray"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/24.png" Stretch="None"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightGray"></Setter>
                            <Setter Property="Content" Value="X"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>

    </Style>
    <!--Button(黑色按钮)-->
    <Style x:Key="ButtonBlackStyle" TargetType="{x:Type Button}" >
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Background" Value="#41B1E1"></Setter>
        <Setter Property="Foreground" Value="#fff"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Width" Value="40"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#009DED"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonRedStyle" TargetType="{x:Type Button}" >
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Background" Value="#FF5552"></Setter>
        <Setter Property="Foreground" Value="#fff"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#009DED"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Button(tab未选中)-->
    <Style x:Key="ButtonToTabnoSelectedStyle" TargetType="{x:Type Button}" >
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Background" Value="{Binding Background}"></Setter>
        <Setter Property="Foreground" Value="#000"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#009DED"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#009DED"/>
            </Trigger>
        </Style.Triggers>

    </Style>
    <!--Button(tab选中)-->
    <Style x:Key="ButtonToTabSelectedStyle" TargetType="{x:Type Button}" >
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Foreground" Value="#000"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#009DED"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--TextBox-->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Width="Auto" Height="Auto" BorderThickness="1" BorderBrush="#B9C0C7">
                        <Grid x:Name="grid" Background="#FFFFFF">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--PasswordBox-->
    <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="#B9C0C7"></Setter>
    </Style>
    <!--Border-->
    <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="#B9C0C7"></Setter>
    </Style>
    <!--ListBox-->
    <Style x:Key="listBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="#B9C0C7"></Setter>
    </Style>
    <!--RadioButton-->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="#B9C0C7"></Setter>
    </Style>
    <!--CheckBox-->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="#B9C0C7"></Setter>
    </Style>
    <!--TextBlock-->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="Margin" Value="2 2 2 2"></Setter>
    </Style>
    <Style x:Key="OperatePanelStyle" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Height" Value="50"></Setter>
    </Style>
    <Style x:Key="OperateButtonStyle" TargetType="{x:Type Button}" >
        <Setter Property="Width" Value="80"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="Margin" Value="10,0,0,0"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontSize" Value="9"></Setter>
    </Style>
    <!--蓝色背景Grid(主窗体顶部)-->
    <Style x:Key="GridTopStyle" TargetType="{x:Type Grid}" >
        <Setter Property="Background" Value="#009DED"></Setter>
        <Setter Property="Height" Value="30"></Setter>
    </Style>
    <Style x:Key="GridBottomStyle" TargetType="{x:Type Grid}" >
        <Setter Property="Background" Value="#009DED"></Setter>
    </Style>
    <!--黑色背景StackPanel(主窗体左侧菜单)-->
    <Style x:Key="StackPanelBlackStyle" TargetType="{x:Type StackPanel}" >
        <Setter Property="Background" Value="#363945"></Setter>
    </Style>
    <!--TreeView-->
    <Style x:Key="TreeViewBaseStyle" TargetType="{x:Type TreeView}" >
        <Setter Property="Background" Value="#363945"></Setter>
        <Setter Property="BorderThickness"  Value="0"></Setter>
        <Setter Property="Foreground" Value="#ffffff"></Setter>
    </Style>
    <!--窗体样式-->
    <Style x:Key="O2OWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None"></Setter>
        <Setter Property="WindowState" Value="Normal"></Setter>
        <Setter Property="AllowsTransparency" Value="True"></Setter>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="Icon" Value="/Images/Soft.ico"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid Margin="1">
                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"  
                               RadiusX="0" RadiusY="0">
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="5" ShadowDepth="0"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Border Background="{TemplateBinding Background}"  
                                BorderBrush="{TemplateBinding BorderBrush}"  
                                BorderThickness="{TemplateBinding BorderThickness}"  
                                Padding="{TemplateBinding Margin}"  
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  
                                CornerRadius="1">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--添加-->
    <Style x:Key="addButton" TargetType="Button">
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="Foreground" Value="#8e98a4"></Setter>
        <Setter Property="Width"  Value="39"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        <Setter Property="BorderBrush"  Value="Transparent"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/toolbtn/addBtn.png" Stretch="None"  AlignmentX="Left"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="#000"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Images/toolbtn/addBtnSelected.png" Stretch="None"  AlignmentX="Left"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--更新-->
    <Style x:Key="updateButton" TargetType="Button">
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="Foreground" Value="#8e98a4"></Setter>
        <Setter Property="Width"  Value="39"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        <Setter Property="BorderBrush"  Value="Transparent"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/toolbtn/updateBtn.png" Stretch="None"  AlignmentX="Left"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="#000"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Images/toolbtn/updateBtnSelected.png" Stretch="None"  AlignmentX="Left"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--删除-->
    <Style x:Key="delButton" TargetType="Button">
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="Foreground" Value="#8e98a4"></Setter>
        <Setter Property="Width"  Value="39"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        <Setter Property="BorderBrush"  Value="Transparent"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/toolbtn/delBtn.png" Stretch="None"  AlignmentX="Left"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="#000"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Images/toolbtn/delBtnSelected.png" Stretch="None"  AlignmentX="Left"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--删除-->
    <Style x:Key="TabItemdelButton" TargetType="Button">
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="Foreground" Value="#8e98a4"></Setter>
        <Setter Property="Width"  Value="39"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        <Setter Property="BorderBrush"  Value="Transparent"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/24.png" Stretch="None"  AlignmentX="Left"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="#000"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Images/toolbtn/delBtnSelected.png" Stretch="None"  AlignmentX="Left"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--批量-->
    <Style x:Key="batchButton" TargetType="Button">
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="Foreground" Value="#8e98a4"></Setter>
        <Setter Property="Width"  Value="39"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        <Setter Property="BorderBrush"  Value="Transparent"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/toolbtn/batchBtn.png" Stretch="None"  AlignmentX="Left"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="#000"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Images/toolbtn/batchBtnSelected.png" Stretch="None"  AlignmentX="Left"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--导入-->
    <Style x:Key="importButton" TargetType="Button">
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="Foreground" Value="#8e98a4"></Setter>
        <Setter Property="Width"  Value="39"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        <Setter Property="BorderBrush"  Value="Transparent"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/toolbtn/importBtn.png" Stretch="None"  AlignmentX="Left"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="#000"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Images/toolbtn/importBtnSelected.png" Stretch="None"  AlignmentX="Left"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--导出-->
    <Style x:Key="exportButton" TargetType="Button">
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="Foreground" Value="#8e98a4"></Setter>
        <Setter Property="Width"  Value="39"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        <Setter Property="BorderBrush"  Value="Transparent"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/toolbtn/exportBtn.png" Stretch="None"  AlignmentX="Left"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="#000"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Images/toolbtn/exportBtnSelected.png" Stretch="None"  AlignmentX="Left"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--设置-->
    <Style x:Key="setButton" TargetType="Button">
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="Foreground" Value="#8e98a4"></Setter>
        <Setter Property="Width"  Value="39"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        <Setter Property="BorderBrush"  Value="Transparent"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/toolbtn/setBtn.png" Stretch="None"  AlignmentX="Left"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="#000"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Images/toolbtn/setBtnSelected.png" Stretch="None"  AlignmentX="Left"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="configButton" TargetType="Button">
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="Foreground" Value="#8e98a4"></Setter>
        <Setter Property="Width"  Value="39"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        <Setter Property="BorderBrush"  Value="Transparent"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/25.png" Stretch="None"  AlignmentX="Left"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="#000"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/Images/toolbtn/setBtnSelected.png" Stretch="None"  AlignmentX="Left"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="allselectedButton" TargetType="Button">
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="Foreground" Value="#8e98a4"></Setter>
        <Setter Property="Width"  Value="40"></Setter>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        <Setter Property="BorderBrush"  Value="Transparent"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/toolbtn/allselected.png" Stretch="None"  AlignmentX="Left"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="#000"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="noSelectedButton" TargetType="Button">
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="Foreground" Value="#8e98a4"></Setter>
        <Setter Property="Width"  Value="40"></Setter>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        <Setter Property="BorderBrush"  Value="Transparent"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/toolbtn/noselected.png" Stretch="None"  AlignmentX="Left"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="#000"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="refreshButton" TargetType="Button">
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="Foreground" Value="#8e98a4"></Setter>
        <Setter Property="Width"  Value="40"></Setter>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        <Setter Property="BorderBrush"  Value="Transparent"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/toolbtn/refresh.png" Stretch="None"  AlignmentX="Left"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="#000"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CustomItemsControl" TargetType="{x:Type ItemsControl}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"></WrapPanel>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ListBox-->
    <Style  x:Key="ManImageListBox" TargetType="{x:Type ListBox}">

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border 
                       Name="Border"
                       Padding="2"
                        SnapsToDevicePixels="true">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="25"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Image Width="25" Height="25" Source="../Images/listimage.png" Grid.Column="0"/>
                                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center" ></ContentPresenter>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background"
                    Value="#009DED"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground"
                    Value="White"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  x:Key="DeptImageListBox" TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border 
                       Name="Border"
                       Padding="2"
                        SnapsToDevicePixels="true">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="25"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Image Width="25" Height="25" Source="../Images/deptimage.png" Grid.Column="0"/>
                                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center" ></ContentPresenter>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background"
                    Value="#009DED"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground"
                    Value="White"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  x:Key="ClothesImageListBox" TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border 
                       Name="Border"
                       Padding="2"
                        SnapsToDevicePixels="true">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="25"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Image Width="25" Height="25"  Grid.Column="0" Source="/9M.Work.WPF_Main;component/Images/clotheslist.png"/>
                                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center" ></ContentPresenter>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background"
                    Value="#009DED"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground"
                    Value="White"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style  x:Key="ColorImageListBox" TargetType="{x:Type ListBox}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border 
                       Name="Border"
                       Padding="2"
                        SnapsToDevicePixels="true">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="25"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Image Width="25" Height="25"  Grid.Column="0" Source="/9M.Work.WPF_Main;component/Images/colorlist.jpg"/>
                                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center" ></ContentPresenter>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background"
                    Value="#009DED"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground"
                    Value="White"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--RadioButton-->
    <Style x:Key="BoxRadioButtonForFuDai" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="LightGray"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Padding" Value="3 2 3 2"></Setter>
        <Setter Property="FontSize" Value="80"></Setter>
        <Setter Property="BorderThickness" Value="5"></Setter>
        <Setter Property="Height" Value="120"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="true"></Setter>
        <Setter Property="BorderBrush" Value="#909090" />
        <Setter Property="Width" Value="160"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid" VerticalAlignment="Center">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"  Height="{TemplateBinding Height}" HorizontalAlignment="Center"
              Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <!--选中的状态标识-->
                        <!--<TextBlock Text="" x:Name="checkState" VerticalAlignment="Bottom" Visibility="Collapsed"
                 FontSize="14" Margin="1" HorizontalAlignment="Right" Foreground="Black"/>-->
                    </Grid>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <!--<Setter Property="Visibility" Value="Visible" TargetName="checkState" ></Setter>-->
                            <Setter Property="Background" Value="#00B0F0"></Setter>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            -->
                        <!--<Setter Property="BorderBrush" Value="#F0B030"></Setter>-->
                        <!--
                            <Setter Property="BorderBrush" Value="#FF5552"></Setter>
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.7" TargetName="grid" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BoxRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="#87CEEB"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Padding" Value="3 2 3 2"></Setter>
        <Setter Property="FontSize" Value="80"></Setter>
        <Setter Property="BorderThickness" Value="5"></Setter>
        <Setter Property="Height" Value="120"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="true"></Setter>
        <Setter Property="BorderBrush" Value="#909090" />
        <Setter Property="Width" Value="160"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid" VerticalAlignment="Center">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"  Height="{TemplateBinding Height}" HorizontalAlignment="Center"
              Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <!--选中的状态标识-->
                        <!--<TextBlock Text="" x:Name="checkState" VerticalAlignment="Bottom" Visibility="Collapsed"
                 FontSize="14" Margin="1" HorizontalAlignment="Right" Foreground="Black"/>-->
                    </Grid>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <!--<Setter Property="Visibility" Value="Visible" TargetName="checkState" ></Setter>-->
                            <Setter Property="Background" Value="#FF5552"></Setter>
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            -->
                        <!--<Setter Property="BorderBrush" Value="#F0B030"></Setter>-->
                        <!--
                            <Setter Property="BorderBrush" Value="#FF5552"></Setter>
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.7" TargetName="grid" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush Color="#dfe9ed" x:Key="TBBorderBrush" />
    <SolidColorBrush x:Key="WatermaskForeground" Color="#8c9092" />
    <Style TargetType="{x:Type WT:PerfectWateMarkTextBox}">
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type WT:PerfectWateMarkTextBox}">
                    <Grid Background="#fff">
                        <Border x:Name="Border" BorderThickness="1" BorderBrush="{StaticResource TBBorderBrush}" CornerRadius="3">
                            <Grid >
                                <Label x:Name="TextPrompt" Content="{TemplateBinding Tag}" Focusable="False"  Foreground="{DynamicResource WatermaskForeground}" 
                                       Height="{TemplateBinding Height}" Visibility="Collapsed" Padding="5,0,0,0" VerticalContentAlignment="Center" Margin="2,0,0,0" VerticalAlignment="Center"/>
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TextBoxDisabledBackground}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForeground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="TextPrompt" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Border" 
                                    Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--linkbutton-->
    <Style x:Key="linkButton" TargetType="Button">
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="15 5 0 0"></Setter>
        <Setter Property="Foreground" Value="#000" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"></Setter>
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>